name: Deploy to Server

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install --no-root

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.DEPLOY_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ghcr.io/ilyasvinarenko/mysite:${{ github.sha }}
            ghcr.io/ilyasvinarenko/mysite:latest

      - name: Clean up old Docker images on server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_LOGIN }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "=== АВТОМАТИЧЕСКАЯ ОЧИСТКА СТАРЫХ ОБРАЗОВ ==="
            
            # Удаляем все остановленные контейнеры (безопасно)
            docker container prune -f
            
            echo "Текущие образы mysite:"
            docker images ghcr.io/ilyasvinarenko/mysite --format "table {{.Repository}}\t{{.Tag}}\t{{.Size}}\t{{.CreatedAt}}"
            
            # Удаляем все образы mysite кроме последних 3 (по дате создания)
            echo "Удаляем старые образы (кроме последних 3)..."
            docker images ghcr.io/ilyasvinarenko/mysite --format "{{.ID}} {{.CreatedAt}}" | \
              tail -n +2 | \
              sort -rk2 | \
              awk 'NR>3 {print $1}' | \
              xargs -r docker rmi -f || true
            
            echo "Оставшиеся образы mysite:"
            docker images ghcr.io/ilyasvinarenko/mysite --format "table {{.Tag}}\t{{.Size}}\t{{.CreatedAt}}"

      - name: Deploy to server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_LOGIN }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "=== ДЕПЛОЙ НОВОЙ ВЕРСИИ ==="
            
            # Логинимся в GitHub Container Registry
            echo "${{ secrets.DEPLOY_TOKEN }}" | docker login ghcr.io -u ilyasvinarenko --password-stdin
            
            # Останавливаем и удаляем старый контейнер
            docker stop mysite || true
            docker rm mysite || true
            
            # Скачиваем новый образ
            docker pull ghcr.io/ilyasvinarenko/mysite:${{ github.sha }}
            
            # Запускаем новый контейнер
            docker run -d \
              --name mysite \
              --network=app-network \
              -e DB_URL='${{ secrets.DB_URL }}' \
              -e SECRET_KEY='${{ secrets.SECRET_KEY }}' \
              -e ALGORITHM='HS256' \
              -p 8000:8000 \
              ghcr.io/ilyasvinarenko/mysite:${{ github.sha }}
            
            echo "Деплой успешно завершен!"